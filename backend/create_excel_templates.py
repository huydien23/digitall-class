import os
import django
import openpyxl
from openpyxl import Workbook
from openpyxl.styles import PatternFill, Font, Alignment, Border, Side
from datetime import datetime

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'student_management.settings')
django.setup()

def create_student_import_template():
    """T·∫°o file Excel m·∫´u ƒë·ªÉ import sinh vi√™n"""
    wb = Workbook()
    ws = wb.active
    ws.title = "Danh s√°ch sinh vi√™n"
    
    # ƒê·ªãnh nghƒ©a headers v√† v√≠ d·ª• d·ªØ li·ªáu
    headers = [
        ('MSSV', 'DH22TIN001'),
        ('H·ªç', 'Nguy·ªÖn VƒÉn'),
        ('T√™n', 'An'),
        ('Email', 'nguyenvanan@student.edu.vn'),
        ('S·ªë ƒëi·ªán tho·∫°i', '0123456789'),
        ('Gi·ªõi t√≠nh', 'male'),  # male/female/other
        ('Ng√†y sinh', '2002-05-15'),  # YYYY-MM-DD
        ('ƒê·ªãa ch·ªâ', 'S·ªë 1 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM'),
        ('Tr·∫°ng th√°i', 'active')  # active/inactive
    ]
    
    # Style cho header
    header_fill = PatternFill(start_color="366092", end_color="366092", fill_type="solid")
    header_font = Font(color="FFFFFF", bold=True, size=11)
    header_alignment = Alignment(horizontal="center", vertical="center")
    
    # Style cho border
    thin_border = Border(
        left=Side(style='thin'),
        right=Side(style='thin'),
        top=Side(style='thin'),
        bottom=Side(style='thin')
    )
    
    # Th√™m ti√™u ƒë·ªÅ
    ws.merge_cells('A1:I1')
    title_cell = ws['A1']
    title_cell.value = "TEMPLATE IMPORT DANH S√ÅCH SINH VI√äN"
    title_cell.font = Font(bold=True, size=14)
    title_cell.alignment = Alignment(horizontal="center", vertical="center")
    
    # Th√™m h∆∞·ªõng d·∫´n
    instructions = [
        "H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG:",
        "1. ƒêi·ªÅn th√¥ng tin sinh vi√™n t·ª´ d√≤ng 5 tr·ªü ƒëi",
        "2. MSSV: M√£ sinh vi√™n (b·∫Øt bu·ªôc, kh√¥ng tr√πng)",
        "3. H·ªç v√† T√™n: B·∫Øt bu·ªôc",
        "4. Email: B·∫Øt bu·ªôc, ƒë·ªãnh d·∫°ng email h·ª£p l·ªá",
        "5. S·ªë ƒëi·ªán tho·∫°i: T√πy ch·ªçn, 10 s·ªë",
        "6. Gi·ªõi t√≠nh: male/female/other",
        "7. Ng√†y sinh: ƒê·ªãnh d·∫°ng YYYY-MM-DD (VD: 2002-05-15)",
        "8. ƒê·ªãa ch·ªâ: T√πy ch·ªçn",
        "9. Tr·∫°ng th√°i: active/inactive (m·∫∑c ƒë·ªãnh: active)",
        "",
        "L∆ØU √ù: Kh√¥ng x√≥a ho·∫∑c thay ƒë·ªïi d√≤ng header (d√≤ng 4)"
    ]
    
    # Th√™m h∆∞·ªõng d·∫´n v√†o file
    ws.merge_cells('K1:Q12')
    instruction_cell = ws['K1']
    instruction_cell.value = "\n".join(instructions)
    instruction_cell.alignment = Alignment(horizontal="left", vertical="top", wrap_text=True)
    instruction_cell.fill = PatternFill(start_color="FFF2CC", end_color="FFF2CC", fill_type="solid")
    instruction_cell.border = thin_border
    
    # Th√™m headers (d√≤ng 4)
    for col, (header, _) in enumerate(headers, 1):
        cell = ws.cell(row=4, column=col)
        cell.value = header
        cell.fill = header_fill
        cell.font = header_font
        cell.alignment = header_alignment
        cell.border = thin_border
    
    # Th√™m d·ªØ li·ªáu m·∫´u (d√≤ng 5-7)
    sample_data = [
        ['DH22TIN001', 'Nguy·ªÖn VƒÉn', 'An', 'nguyenvanan@student.edu.vn', '0123456789', 'male', '2002-05-15', 'S·ªë 1 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM', 'active'],
        ['DH22TIN002', 'Tr·∫ßn Th·ªã', 'B√¨nh', 'tranthibinh@student.edu.vn', '0987654321', 'female', '2002-08-20', 'S·ªë 2 ƒê∆∞·ªùng XYZ, Qu·∫≠n 2, TP.HCM', 'active'],
        ['DH22TIN003', 'L√™ Ho√†ng', 'C∆∞·ªùng', 'lehoangcuong@student.edu.vn', '0369852147', 'male', '2002-03-10', 'S·ªë 3 ƒê∆∞·ªùng DEF, Qu·∫≠n 3, TP.HCM', 'active']
    ]
    
    for row_idx, row_data in enumerate(sample_data, 5):
        for col_idx, value in enumerate(row_data, 1):
            cell = ws.cell(row=row_idx, column=col_idx)
            cell.value = value
            cell.border = thin_border
            cell.alignment = Alignment(horizontal="left", vertical="center")
            # T√¥ m√†u nh·∫°t cho d·ªØ li·ªáu m·∫´u
            cell.fill = PatternFill(start_color="E7E6E6", end_color="E7E6E6", fill_type="solid")
    
    # Th√™m ghi ch√∫
    ws.cell(row=9, column=1).value = "* X√≥a c√°c d√≤ng m·∫´u (d√≤ng 5-7) v√† th√™m d·ªØ li·ªáu th·ª±c c·ªßa b·∫°n"
    ws.cell(row=9, column=1).font = Font(italic=True, color="FF0000")
    
    # ƒêi·ªÅu ch·ªânh ƒë·ªô r·ªông c·ªôt
    column_widths = [15, 15, 10, 30, 15, 10, 12, 40, 10]
    for i, width in enumerate(column_widths, 1):
        ws.column_dimensions[chr(64 + i)].width = width
    
    # L∆∞u file
    filename = f"student_import_template_{datetime.now().strftime('%Y%m%d')}.xlsx"
    wb.save(filename)
    print(f"‚úÖ ƒê√£ t·∫°o file template: {filename}")
    return filename


def create_class_management_template():
    """T·∫°o file Excel ƒë·ªÉ qu·∫£n l√Ω l·ªõp h·ªçc"""
    wb = Workbook()
    
    # Sheet 1: Th√¥ng tin l·ªõp
    ws1 = wb.active
    ws1.title = "Th√¥ng tin l·ªõp"
    
    class_headers = ['M√£ l·ªõp', 'T√™n l·ªõp', 'M√¥ t·∫£', 'Gi·∫£ng vi√™n Email', 'S·ªë l∆∞·ª£ng t·ªëi ƒëa', 'Tr·∫°ng th√°i']
    for col, header in enumerate(class_headers, 1):
        cell = ws1.cell(row=1, column=col)
        cell.value = header
        cell.font = Font(bold=True)
        cell.fill = PatternFill(start_color="366092", end_color="366092", fill_type="solid")
        cell.font = Font(color="FFFFFF", bold=True)
    
    # D·ªØ li·ªáu m·∫´u
    ws1.cell(row=2, column=1).value = "IT001"
    ws1.cell(row=2, column=2).value = "L·∫≠p tr√¨nh Web"
    ws1.cell(row=2, column=3).value = "M√¥n h·ªçc v·ªÅ ph√°t tri·ªÉn ·ª©ng d·ª•ng web"
    ws1.cell(row=2, column=4).value = "teacher@nctu.edu.vn"
    ws1.cell(row=2, column=5).value = 50
    ws1.cell(row=2, column=6).value = "active"
    
    # Sheet 2: Ph√¢n c√¥ng sinh vi√™n v√†o l·ªõp
    ws2 = wb.create_sheet("Ph√¢n c√¥ng sinh vi√™n")
    
    assign_headers = ['M√£ l·ªõp', 'MSSV', 'Ng√†y tham gia', 'Tr·∫°ng th√°i']
    for col, header in enumerate(assign_headers, 1):
        cell = ws2.cell(row=1, column=col)
        cell.value = header
        cell.font = Font(bold=True)
        cell.fill = PatternFill(start_color="366092", end_color="366092", fill_type="solid")
        cell.font = Font(color="FFFFFF", bold=True)
    
    # D·ªØ li·ªáu m·∫´u
    sample_assigns = [
        ['IT001', 'DH22TIN001', datetime.now().strftime('%Y-%m-%d'), 'active'],
        ['IT001', 'DH22TIN002', datetime.now().strftime('%Y-%m-%d'), 'active'],
        ['IT001', 'DH22TIN003', datetime.now().strftime('%Y-%m-%d'), 'active']
    ]
    
    for row_idx, row_data in enumerate(sample_assigns, 2):
        for col_idx, value in enumerate(row_data, 1):
            ws2.cell(row=row_idx, column=col_idx).value = value
    
    # ƒêi·ªÅu ch·ªânh ƒë·ªô r·ªông c·ªôt
    for ws in [ws1, ws2]:
        for column in ws.columns:
            max_length = 0
            column_letter = column[0].column_letter
            for cell in column:
                if cell.value:
                    max_length = max(max_length, len(str(cell.value)))
            adjusted_width = min(max_length + 5, 50)
            ws.column_dimensions[column_letter].width = adjusted_width
    
    filename = f"class_management_template_{datetime.now().strftime('%Y%m%d')}.xlsx"
    wb.save(filename)
    print(f"‚úÖ ƒê√£ t·∫°o file template qu·∫£n l√Ω l·ªõp: {filename}")
    return filename


def create_grade_import_template():
    """T·∫°o file Excel m·∫´u ƒë·ªÉ import ƒëi·ªÉm"""
    wb = Workbook()
    ws = wb.active
    ws.title = "B·∫£ng ƒëi·ªÉm"
    
    # Headers
    headers = ['MSSV', 'M√£ l·ªõp', 'M√¥n h·ªçc', 'ƒêi·ªÉm', 'Lo·∫°i ki·ªÉm tra', 'H·ªçc k·ª≥', 'NƒÉm h·ªçc']
    for col, header in enumerate(headers, 1):
        cell = ws.cell(row=1, column=col)
        cell.value = header
        cell.font = Font(bold=True)
        cell.fill = PatternFill(start_color="366092", end_color="366092", fill_type="solid")
        cell.font = Font(color="FFFFFF", bold=True)
    
    # D·ªØ li·ªáu m·∫´u
    sample_grades = [
        ['DH22TIN001', 'IT001', 'L·∫≠p tr√¨nh Web', '8.5', 'midterm', '1', '2024-2025'],
        ['DH22TIN001', 'IT001', 'L·∫≠p tr√¨nh Web', '9.0', 'final', '1', '2024-2025'],
        ['DH22TIN002', 'IT001', 'L·∫≠p tr√¨nh Web', '7.5', 'midterm', '1', '2024-2025'],
        ['DH22TIN002', 'IT001', 'L·∫≠p tr√¨nh Web', '8.0', 'final', '1', '2024-2025']
    ]
    
    for row_idx, row_data in enumerate(sample_grades, 2):
        for col_idx, value in enumerate(row_data, 1):
            ws.cell(row=row_idx, column=col_idx).value = value
    
    # Th√™m ghi ch√∫
    ws.cell(row=7, column=1).value = "Ghi ch√∫:"
    ws.cell(row=8, column=1).value = "- Lo·∫°i ki·ªÉm tra: midterm (gi·ªØa k·ª≥), final (cu·ªëi k·ª≥), assignment (b√†i t·∫≠p), quiz"
    ws.cell(row=9, column=1).value = "- ƒêi·ªÉm: Thang ƒëi·ªÉm 10"
    ws.cell(row=10, column=1).value = "- H·ªçc k·ª≥: 1, 2, 3 (h√®)"
    
    # ƒêi·ªÅu ch·ªânh ƒë·ªô r·ªông c·ªôt
    column_widths = [15, 10, 25, 10, 15, 10, 12]
    for i, width in enumerate(column_widths, 1):
        ws.column_dimensions[chr(64 + i)].width = width
    
    filename = f"grade_import_template_{datetime.now().strftime('%Y%m%d')}.xlsx"
    wb.save(filename)
    print(f"‚úÖ ƒê√£ t·∫°o file template nh·∫≠p ƒëi·ªÉm: {filename}")
    return filename


def main():
    """T·∫°o t·∫•t c·∫£ c√°c template"""
    print("=" * 60)
    print("T·∫†O C√ÅC FILE EXCEL TEMPLATE")
    print("=" * 60)
    
    print("\n1. T·∫°o template import sinh vi√™n...")
    student_file = create_student_import_template()
    
    print("\n2. T·∫°o template qu·∫£n l√Ω l·ªõp...")
    class_file = create_class_management_template()
    
    print("\n3. T·∫°o template nh·∫≠p ƒëi·ªÉm...")
    grade_file = create_grade_import_template()
    
    print("\n" + "=" * 60)
    print("HO√ÄN T·∫§T!")
    print("=" * 60)
    print("\nüìÅ C√°c file ƒë√£ t·∫°o:")
    print(f"  1. {student_file} - Template import sinh vi√™n")
    print(f"  2. {class_file} - Template qu·∫£n l√Ω l·ªõp")
    print(f"  3. {grade_file} - Template nh·∫≠p ƒëi·ªÉm")
    print("\nüìå H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:")
    print("  1. M·ªü file Excel template")
    print("  2. X√≥a d·ªØ li·ªáu m·∫´u v√† ƒëi·ªÅn d·ªØ li·ªáu th·ª±c c·ªßa b·∫°n")
    print("  3. L∆∞u file v√† upload l√™n h·ªá th·ªëng qua ch·ª©c nƒÉng Import")
    print("\n‚ö†Ô∏è L∆∞u √Ω:")
    print("  - Gi·ªØ nguy√™n d√≤ng header (d√≤ng 1)")
    print("  - ƒêi·ªÅn ƒë√∫ng ƒë·ªãnh d·∫°ng d·ªØ li·ªáu theo h∆∞·ªõng d·∫´n")
    print("  - MSSV kh√¥ng ƒë∆∞·ª£c tr√πng l·∫∑p")


if __name__ == "__main__":
    main()