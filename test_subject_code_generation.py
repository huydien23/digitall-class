#!/usr/bin/env python
import os
import sys
import django

# Setup Django environment
sys.path.append('backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'student_management.settings')
django.setup()

from apps.classes.models import Subject
from apps.accounts.models import User
import requests
import json

def test_auto_generation():
    print("üß™ === TEST AUTO-GENERATE SUBJECT CODES ===")
    print()
    
    # Test cases
    test_subjects = [
        "L·∫≠p tr√¨nh Python",
        "L·∫≠p tr√¨nh Java n√¢ng cao", 
        "C∆° s·ªü d·ªØ li·ªáu",
        "M·∫°ng m√°y t√≠nh",
        "Tr√≠ tu·ªá nh√¢n t·∫°o",
        "To√°n r·ªùi r·∫°c",
        "Ti·∫øng Anh chuy√™n ng√†nh",
        "Qu·∫£n l√Ω d·ª± √°n CNTT",
        "Ph√°t tri·ªÉn Web",
        "L·∫≠p tr√¨nh Mobile Android",
    ]
    
    BASE_URL = "http://localhost:8001"
    LOGIN_EMAIL = "admin@qlsv.com"
    
    try:
        # Login
        print("üîê ƒêang ƒëƒÉng nh·∫≠p...")
        for password in ["123456", "admin123", "password", "admin", "qlsv123"]:
            login_response = requests.post(f"{BASE_URL}/api/auth/login/", 
                json={"email": LOGIN_EMAIL, "password": password}, 
                timeout=5)
            if login_response.status_code == 200:
                print(f"‚úÖ Login th√†nh c√¥ng")
                break
        else:
            print("‚ùå Kh√¥ng th·ªÉ login")
            return
            
        token = login_response.json().get('access')
        headers = {"Authorization": f"Bearer {token}"}
        
        print("\nüéØ TEST AUTO-GENERATE CODES:")
        print("-" * 60)
        
        for i, subject_name in enumerate(test_subjects, 1):
            print(f"{i:2d}. {subject_name:<30}", end=" ‚Üí ")
            
            # Test create subject v·ªõi auto-generate (code='')
            payload = {
                "code": "",  # Empty = auto-generate
                "name": subject_name,
                "credits": 3,
                "description": f"M√¥n h·ªçc {subject_name}"
            }
            
            response = requests.post(f"{BASE_URL}/api/classes/subjects/", 
                json=payload, 
                headers=headers, 
                timeout=10)
            
            if response.status_code == 201:
                result = response.json()
                generated_code = result.get('code', 'N/A')
                print(f"‚úÖ {generated_code}")
            else:
                error_data = response.json()
                print(f"‚ùå {response.status_code}: {error_data.get('error', 'Unknown')}")
        
        print("\n" + "=" * 60)
        print("üìã DANH S√ÅCH M√îN H·ªåC SAU KHI T·∫†O:")
        
        # Get all subjects
        subjects_response = requests.get(f"{BASE_URL}/api/classes/subjects/", 
            headers=headers, timeout=5)
        
        if subjects_response.status_code == 200:
            subjects = subjects_response.json()
            for subject in subjects:
                print(f"  {subject['code']:<12} - {subject['name']}")
        
        print(f"\nT·ªïng c·ªông: {len(subjects) if subjects_response.status_code == 200 else 'N/A'} m√¥n h·ªçc")
        
    except requests.exceptions.ConnectionError:
        print("‚ùå Server kh√¥ng ch·∫°y. H√£y start server:")
        print("   python backend/manage.py runserver 0.0.0.0:8001")
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")

if __name__ == "__main__":
    test_auto_generation()