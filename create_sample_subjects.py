#!/usr/bin/env python
import os
import sys
import django

# Setup Django environment
sys.path.append('backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'student_management.settings')
django.setup()

from apps.classes.models import Subject
from apps.accounts.models import User

print("=== T·∫†O M√îN H·ªåC M·∫™U ===")
print()

# L·∫•y user ƒë·ªÉ l√†m created_by
user = User.objects.first()

# Danh s√°ch m√¥n h·ªçc m·∫´u (theo ch∆∞∆°ng tr√¨nh ƒë·∫°i h·ªçc c√¥ng ngh·ªá th√¥ng tin)
sample_subjects = [
    # C∆° s·ªü
    {"code": "CS101", "name": "Nh·∫≠p m√¥n L·∫≠p tr√¨nh", "credits": 3, "description": "H·ªçc l·∫≠p tr√¨nh c∆° b·∫£n v·ªõi Python"},
    {"code": "CS102", "name": "C·∫•u tr√∫c D·ªØ li·ªáu v√† Gi·∫£i thu·∫≠t", "credits": 3, "description": "C√°c c·∫•u tr√∫c d·ªØ li·ªáu v√† gi·∫£i thu·∫≠t c∆° b·∫£n"},
    {"code": "CS103", "name": "L·∫≠p tr√¨nh H∆∞·ªõng ƒë·ªëi t∆∞·ª£ng", "credits": 3, "description": "OOP v·ªõi Java/C#"},
    {"code": "CS201", "name": "C∆° s·ªü D·ªØ li·ªáu", "credits": 3, "description": "Thi·∫øt k·∫ø v√† qu·∫£n l√Ω c∆° s·ªü d·ªØ li·ªáu"},
    {"code": "CS202", "name": "M·∫°ng M√°y t√≠nh", "credits": 3, "description": "Nguy√™n l√Ω v√† giao th·ª©c m·∫°ng"},
    {"code": "CS203", "name": "H·ªá ƒëi·ªÅu h√†nh", "credits": 3, "description": "Nguy√™n l√Ω ho·∫°t ƒë·ªông c·ªßa h·ªá ƒëi·ªÅu h√†nh"},
    
    # Web & Mobile
    {"code": "WEB301", "name": "L·∫≠p tr√¨nh Web", "credits": 4, "description": "HTML, CSS, JavaScript, PHP/Django"},
    {"code": "WEB302", "name": "Ph√°t tri·ªÉn Web n√¢ng cao", "credits": 4, "description": "React, Vue.js, Node.js"},
    {"code": "MOB401", "name": "L·∫≠p tr√¨nh Mobile", "credits": 3, "description": "Android/iOS development"},
    
    # AI & Data
    {"code": "AI501", "name": "Tr√≠ tu·ªá Nh√¢n t·∫°o", "credits": 3, "description": "Machine Learning c∆° b·∫£n"},
    {"code": "AI502", "name": "X·ª≠ l√Ω D·ªØ li·ªáu l·ªõn", "credits": 3, "description": "Big Data v·ªõi Python/Spark"},
    
    # Qu·∫£n l√Ω d·ª± √°n
    {"code": "PM601", "name": "Qu·∫£n l√Ω D·ª± √°n CNTT", "credits": 2, "description": "Agile, Scrum, DevOps"},
    {"code": "PM602", "name": "Th·ª±c t·∫≠p Doanh nghi·ªáp", "credits": 4, "description": "Th·ª±c t·∫≠p t·∫°i c√¥ng ty"},
    
    # To√°n h·ªçc
    {"code": "MATH101", "name": "To√°n R·ªùi r·∫°c", "credits": 3, "description": "Logic, t·∫≠p h·ª£p, ƒë·ªì th·ªã"},
    {"code": "MATH201", "name": "X√°c su·∫•t Th·ªëng k√™", "credits": 3, "description": "X√°c su·∫•t v√† th·ªëng k√™ ·ª©ng d·ª•ng"},
    
    # Ngo·∫°i ng·ªØ
    {"code": "ENG101", "name": "Ti·∫øng Anh Chuy√™n ng√†nh CNTT", "credits": 2, "description": "Technical English"},
]

created_count = 0
updated_count = 0

for subject_data in sample_subjects:
    subject, created = Subject.objects.get_or_create(
        code=subject_data["code"],
        defaults={
            "name": subject_data["name"],
            "credits": subject_data["credits"],
            "description": subject_data.get("description", ""),
            "created_by": user
        }
    )
    
    if created:
        created_count += 1
        print(f"‚úÖ T·∫°o m·ªõi: {subject.code} - {subject.name}")
    else:
        updated_count += 1
        # C·∫≠p nh·∫≠t th√¥ng tin n·∫øu c√≥ thay ƒë·ªïi
        subject.name = subject_data["name"]
        subject.credits = subject_data["credits"]
        subject.description = subject_data.get("description", subject.description)
        subject.save()
        print(f"üîÑ C·∫≠p nh·∫≠t: {subject.code} - {subject.name}")

print()
print(f"üéâ HO√ÄN TH√ÄNH:")
print(f"  - T·∫°o m·ªõi: {created_count} m√¥n")
print(f"  - C·∫≠p nh·∫≠t: {updated_count} m√¥n")
print(f"  - T·ªïng c·ªông: {Subject.objects.count()} m√¥n h·ªçc")

print()
print("üìö DANH S√ÅCH T·∫§T C·∫¢ M√îN H·ªåC:")
for subject in Subject.objects.all().order_by('code')[:20]:
    print(f"  {subject.code}: {subject.name} ({subject.credits}TC)")

print()
print("üîß H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG:")
print("1. API l·∫•y danh s√°ch: GET /api/classes/subjects/")
print("2. API t·∫°o m√¥n m·ªõi: POST /api/classes/subjects/")
print("   Body: {\"code\": \"CS999\", \"name\": \"M√¥n m·ªõi\", \"credits\": 3}")
print("3. T√¨m ki·∫øm: GET /api/classes/subjects/?search=web")
print("4. Frontend c·∫ßn th√™m form t·∫°o m√¥n h·ªçc trong modal/popup")